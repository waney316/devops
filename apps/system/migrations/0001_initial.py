# Generated by Django 3.2 on 2021-08-19 15:25

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('remarks', models.CharField(blank=True, max_length=1024, null=True, verbose_name='备注信息')),
                ('title', models.CharField(default='', max_length=64, verbose_name='标题')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('alias', models.CharField(default='', max_length=64, verbose_name='别名')),
                ('icon', models.CharField(default='', max_length=64, verbose_name='图标')),
                ('sort', models.IntegerField(default=0, verbose_name='展示顺序')),
                ('parent', models.IntegerField(default=0, verbose_name='菜单层级')),
                ('type', models.IntegerField(default=0, verbose_name='权限类型')),
                ('component', models.CharField(default='', max_length=256, verbose_name='组件类型')),
                ('path', models.CharField(default='', max_length=256, verbose_name='路由路径')),
                ('hidden', models.BooleanField(default=False, verbose_name='是否隐藏')),
                ('external_link', models.BooleanField(default=False, verbose_name='是否外链')),
                ('permission', models.CharField(default='', max_length=128, verbose_name='权限标识')),
                ('cache', models.BooleanField(default=False, verbose_name='是否缓存')),
                ('redirect', models.CharField(default='', max_length=256, verbose_name='跳转地址')),
            ],
            options={
                'verbose_name': '权限信息',
                'verbose_name_plural': '权限信息',
                'db_table': 'system_permission',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('remarks', models.CharField(blank=True, max_length=1024, null=True, verbose_name='备注信息')),
                ('name', models.CharField(max_length=64, verbose_name='角色')),
            ],
            options={
                'verbose_name': '角色信息',
                'verbose_name_plural': '角色信息',
                'db_table': 'system_role',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('remarks', models.CharField(blank=True, max_length=1024, null=True, verbose_name='备注信息')),
                ('role', models.IntegerField(verbose_name='角色ID')),
                ('permission', models.IntegerField(verbose_name='权限ID')),
            ],
            options={
                'db_table': 'system_role_permission',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('remarks', models.CharField(blank=True, max_length=1024, null=True, verbose_name='备注信息')),
                ('user', models.IntegerField(verbose_name='用户ID')),
                ('role', models.IntegerField(verbose_name='角色ID')),
            ],
            options={
                'db_table': 'system_user_role',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(default='', max_length=64, verbose_name='中文姓名')),
                ('phone', models.CharField(default='', max_length=11, verbose_name='手机号码')),
                ('email', models.EmailField(max_length=64, verbose_name='邮箱')),
                ('avator', models.ImageField(blank=True, default='data/upload/default.jpeg', null=True, upload_to='data/upload/%Y/%m')),
                ('position', models.CharField(blank=True, max_length=64, null=True, verbose_name='职位')),
                ('staff_id', models.IntegerField(blank=True, null=True, verbose_name='员工编号')),
                ('job_status', models.BooleanField(default=True, verbose_name='员工在职状态')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'db_table': 'system_user',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
